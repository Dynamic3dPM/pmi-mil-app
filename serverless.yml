service: pmi-military-app-backend

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs20.x
  region: ${opt:region, 'us-west-2'}
  stage: ${opt:stage, 'pmi-app-dev'}
  environment:
    STAGE: ${self:provider.stage}
    REGION: ${self:provider.region}

functions:
  # Basic health check function
  healthCheck:
    handler: functions/healthCheck.handler
    events:
      - http:
          path: health
          method: get
          cors: true

resources:
  Resources:
    # Create the SSM Parameter for Champion Access Code
    ChampionAccessCodeParameter:
      Type: AWS::SSM::Parameter
      Properties:
        Name: /${self:provider.stage}/champion-access-code
        Type: SecureString
        Value: PMI-CHAMPION-2025
        Description: Access code for PMI Champion registration

    # DynamoDB Tables
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.stage}-Users
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: email
            AttributeType: S
          - AttributeName: userType
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: EmailIndex
            KeySchema:
              - AttributeName: email
                KeyType: HASH
            Projection:
              ProjectionType: ALL
          - IndexName: UserTypeIndex
            KeySchema:
              - AttributeName: userType
                KeyType: HASH
            Projection:
              ProjectionType: ALL

    MilitaryMembersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.stage}-MilitaryMembers
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: userId
            AttributeType: S
          - AttributeName: region
            AttributeType: S
          - AttributeName: championId
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: UserIdIndex
            KeySchema:
              - AttributeName: userId
                KeyType: HASH
            Projection:
              ProjectionType: ALL
          - IndexName: RegionIndex
            KeySchema:
              - AttributeName: region
                KeyType: HASH
            Projection:
              ProjectionType: ALL
          - IndexName: ChampionIndex
            KeySchema:
              - AttributeName: championId
                KeyType: HASH
            Projection:
              ProjectionType: ALL

    ChampionsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.stage}-Champions
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: userId
            AttributeType: S
          - AttributeName: region
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: UserIdIndex
            KeySchema:
              - AttributeName: userId
                KeyType: HASH
            Projection:
              ProjectionType: ALL
          - IndexName: RegionIndex
            KeySchema:
              - AttributeName: region
                KeyType: HASH
            Projection:
              ProjectionType: ALL

    ProgressTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.stage}-Progress
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: memberId
            AttributeType: S
          - AttributeName: status
            AttributeType: S
          - AttributeName: createdAt
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: MemberIdIndex
            KeySchema:
              - AttributeName: memberId
                KeyType: HASH
              - AttributeName: createdAt
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
          - IndexName: StatusIndex
            KeySchema:
              - AttributeName: status
                KeyType: HASH
              - AttributeName: createdAt
                KeyType: RANGE
            Projection:
              ProjectionType: ALL

    AssignmentsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.stage}-Assignments
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: memberId
            AttributeType: S
          - AttributeName: championId
            AttributeType: S
          - AttributeName: createdAt
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: MemberIdIndex
            KeySchema:
              - AttributeName: memberId
                KeyType: HASH
            Projection:
              ProjectionType: ALL
          - IndexName: ChampionIdIndex
            KeySchema:
              - AttributeName: championId
                KeyType: HASH
              - AttributeName: createdAt
                KeyType: RANGE
            Projection:
              ProjectionType: ALL

    MessagesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.stage}-Messages
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: conversationId
            AttributeType: S
          - AttributeName: timestamp
            AttributeType: S
          - AttributeName: senderId
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: ConversationIndex
            KeySchema:
              - AttributeName: conversationId
                KeyType: HASH
              - AttributeName: timestamp
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
          - IndexName: SenderIndex
            KeySchema:
              - AttributeName: senderId
                KeyType: HASH
              - AttributeName: timestamp
                KeyType: RANGE
            Projection:
              ProjectionType: ALL

    ConversationsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.stage}-Conversations
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: participant1Id
            AttributeType: S
          - AttributeName: participant2Id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: Participant1Index
            KeySchema:
              - AttributeName: participant1Id
                KeyType: HASH
            Projection:
              ProjectionType: ALL
          - IndexName: Participant2Index
            KeySchema:
              - AttributeName: participant2Id
                KeyType: HASH
            Projection:
              ProjectionType: ALL

    ReferenceDataTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.stage}-ReferenceData
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: type
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: TypeIndex
            KeySchema:
              - AttributeName: type
                KeyType: HASH
            Projection:
              ProjectionType: ALL

    # Cognito User Pool
    CognitoUserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        UserPoolName: pmi-military-app-users-${self:provider.stage}
        AutoVerifiedAttributes:
          - email
        UsernameAttributes:
          - email
        Schema:
          - Name: email
            Required: true
            Mutable: true
          - Name: given_name
            Required: true
            Mutable: true
          - Name: family_name
            Required: true
            Mutable: true
          - Name: custom:userType
            AttributeDataType: String
            Mutable: true
            Required: false
          - Name: custom:militaryBranch
            AttributeDataType: String
            Mutable: true
            Required: false
          - Name: custom:rank
            AttributeDataType: String
            Mutable: true
            Required: false
          - Name: custom:militaryBase
            AttributeDataType: String
            Mutable: true
            Required: false
        Policies:
          PasswordPolicy:
            MinimumLength: 8
            RequireLowercase: true
            RequireUppercase: true
            RequireNumbers: true
            RequireSymbols: true

    # Cognito User Pool Client
    CognitoUserPoolClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        ClientName: pmi-military-app-client-${self:provider.stage}
        UserPoolId: !Ref CognitoUserPool
        ExplicitAuthFlows:
          - ALLOW_USER_SRP_AUTH
          - ALLOW_REFRESH_TOKEN_AUTH
        GenerateSecret: false

    # Cognito User Pool Groups
    MilitaryGroup:
      Type: AWS::Cognito::UserPoolGroup
      Properties:
        GroupName: Military
        Description: Military personnel and veterans
        UserPoolId: !Ref CognitoUserPool
        Precedence: 1

    ChampionsGroup:
      Type: AWS::Cognito::UserPoolGroup
      Properties:
        GroupName: Champions
        Description: PMI Champions and mentors
        UserPoolId: !Ref CognitoUserPool
        Precedence: 0

    AdminGroup:
      Type: AWS::Cognito::UserPoolGroup
      Properties:
        GroupName: Admin
        Description: Platform administrators
        UserPoolId: !Ref CognitoUserPool
        Precedence: 0

Outputs:
  UserPoolId:
    Value: !Ref CognitoUserPool
    Export:
      Name: ${self:provider.stage}-UserPoolId

  UserPoolClientId:
    Value: !Ref CognitoUserPoolClient
    Export:
      Name: ${self:provider.stage}-UserPoolClientId